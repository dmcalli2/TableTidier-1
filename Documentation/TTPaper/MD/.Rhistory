matrix(1, nrow = 3, ncol = 3)
matrix(1, nrow = 10, ncol = 3)
m <- matrix(1, nrow = 10, ncol = 3)
m %>% as_tibble
library(tidyverse)
m %>% as_tibble
m %>% as_tibble
m %>% as_tibble
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
print(m[row,col])
}
}
hm <- m
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*col
colVal <- (1/nrow(m))*row
hm[row,col] <- (rowVal+colVal)/2
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*col
colVal <- (1/nrow(m))*row
hm[row,col] <- 1-((rowVal+colVal)/2)
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*(col-1)
colVal <- (1/nrow(m))*(row-1)
hm[row,col] <- 1-((rowVal+colVal)/2)
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
colVal <- (1/ncol(m))*(col-1)
rowVal<- (1/nrow(m))*(row-1)
hm[row,col] <- 1-((rowVal+colVal)/2)
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
colVal <- (1/ncol(m))*(col-1)
rowVal<- (1/nrow(m))*(row-1)
hm[row,col] <- 1-((rowVal+colVal))
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
colVal <- (1/ncol(m))*(col-1)
rowVal<- (1/nrow(m))*(row-1)
hm[row,col] <- ((rowVal+colVal))
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
colVal <- 1-(1/ncol(m))*(col-1)
rowVal<- 1-(1/nrow(m))*(row-1)
hm[row,col] <- ((rowVal+colVal))
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
colVal <- 1-(1/ncol(m))*(col-1)
rowVal<- 1-(1/nrow(m))*(row-1)
hm[row,col] <- ((rowVal+colVal)/2)
}
}
hm
hm <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- 1-(1/ncol(m))*(col-1)
colVal<- 1-(1/nrow(m))*(row-1)
hm[row,col] <- ((rowVal+colVal)/2)
}
}
hm
nrow(m)
hm[2,1]
hm <- m
nrow(m)
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*(col-ncol(m))
colVal<- (1/nrow(m))*(row-nrow(m))
hm[row,col] <- ((rowVal+colVal)/2)
}
}
hm
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*(col-ncol(m))
colVal<- (1/nrow(m))*(row-nrow(m))
hm[row,col] <- ((rowVal+colVal))
}
}
hm
hm <- m
nrow(m)
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*(ncol(m)-col)
colVal<- (1/nrow(m))*(nrow(m)-row)
hm[row,col] <- ((rowVal+colVal))
}
}
hm
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*(ncol(m)-col)
colVal<- (1/nrow(m))*(nrow(m)-row)
hm[row,col] <- ((max(rowVal,colVal)))
}
}
hm
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m))*(ncol(m)-col)
colVal<- (1/nrow(m))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- ((max(rowVal,colVal)))
}
}
hm
rovals
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/ncol(m)-1)*(ncol(m)-col)
colVal<- (1/nrow(m)-1)*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- ((max(rowVal,colVal)))
}
}
hm
rovals
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- ((max(rowVal,colVal)))
}
}
hm
rovals
covals
rovals
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm
rovals
covals
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal*colVal)/2
}
}
hm
rovals
covals
hm
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- min(rowVal,colVal)
}
}
hm
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal,colVal)/2
}
}
hm
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal,colVal)/2
}
}
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm
library(tidyverse)
m <- matrix(1, nrow = 10, ncol = 10)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm
hm %>% round(digits = 2)
m <- matrix(1, nrow = 2, ncol = 2)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm %>% round(digits = 2)
m <- matrix(1, nrow = 2, ncol = 1)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/(ncol(m)-1))*(ncol(m)-col)
colVal<- (1/(nrow(m)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm %>% round(digits = 2)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/( (ncol(m)+0.001)-1))*(ncol(m)-col)
colVal<- (1/( (nrow(m)+0.001)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm %>% round(digits = 2)
m <- matrix(1, nrow = 1, ncol = 1)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/( (ncol(m)+0.001)-1))*(ncol(m)-col)
colVal<- (1/( (nrow(m)+0.001)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm %>% round(digits = 2)
m <- matrix(1, nrow = 10, ncol = 10)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/( (ncol(m)+0.001)-1))*(ncol(m)-col)
colVal<- (1/( (nrow(m)+0.001)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm %>% round(digits = 2)
m <- matrix(1, nrow = 10, ncol = 4)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/( (ncol(m)+0.001)-1))*(ncol(m)-col)
colVal<- (1/( (nrow(m)+0.001)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm %>% round(digits = 2)
m <- matrix(1, nrow = 46, ncol = 9)
hm <- m
nrow(m)
rovals <- m
covals <- m
for(row in 1:nrow(m)) {
for(col in 1:ncol(m)) {
rowVal <- (1/( (ncol(m)+0.001)-1))*(ncol(m)-col)
colVal<- (1/( (nrow(m)+0.001)-1))*(nrow(m)-row)
rovals[row,col] <- rowVal
covals[row,col] <- colVal
hm[row,col] <- (rowVal+colVal)/2
}
}
hm %>% round(digits = 2)
hm <-hm %>% round(digits = 2)
hm
hm[,1]
hm[,1] %>% sum()
hm[,1] %>% sum()
hm[,2] %>% sum()
hm[,3] %>% sum()
hm[,4] %>% sum()
hm %>% rapply(hm, sum)
hm %>% rapply( sum)
hm %>% rapply( sum())
hm %>% rapply(sum)
hm %>% summarise()
hm %>% tally()
hm %>% table()
hm
